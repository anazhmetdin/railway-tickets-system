<diagram program="umletino" version="15.0.0"><zoom_level>8</zoom_level><help_text>Space for diagram notesb</help_text><element><id>UMLClass</id><coordinates><x>600</x><y>520</y><w>192</w><h>136</h></coordinates><panel_attributes>*Station*
--
-name: string
-location: string
--
#Station(name: string, location: string)

+getName(): string
+getLocation(): string

+setName(name: string): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>584</x><y>792</y><w>192</w><h>112</h></coordinates><panel_attributes>*Train*
--
-ID: int
-seatsCount: int
--
#Train(seats: int)

+getID(): int
+getSeatsCount(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>888</x><y>792</y><w>192</w><h>368</h></coordinates><panel_attributes>*Trip*
--
-ID: int
-price: float
-date: DateTime
-from: Station
-to: Station
-train: Train
-tickets: Ticket[*]
--
#Trip(ID: int, price: int, date: DateTime,
           from: Station, to: Station,
           train: Train, bookedSeats: int)

+hasEmptySeat(): boolean

+getID(): int
+getPrice(): float
+getDate(): DateTime
+getFrom(): Station
+getTo(): Station
+getTrain(): Train

_+getTrips(to: string = null, _
_                  from: string = null,_
_                  fromDate: DateTime = null ,_
_                  toDate: DateTime = null): Trip[]_

+getTicket():Ticket[]
+getTicket(id: int):Ticket
+addTicket(ticket: Ticket): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>768</x><y>792</y><w>136</w><h>24</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;110;10;150;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1448</x><y>344</y><w>192</w><h>144</h></coordinates><panel_attributes>*OnlineTicket*
--
-payment: Payment
-owner: OnlinePassenger
--
+OnlineTicket(payment: Payment,
                          owner: OnlinePassenger,
                          ID: string, trip: Trip)

+bookTicket(): bool
+cancelTicket(): bool
+getPayment(): Payment


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1536</x><y>544</y><w>232</w><h>144</h></coordinates><panel_attributes>*Payment*
--
-ID: int
-cardNumber: string
--
+Payment(ID: int, cardNumber: string)

+getID(): int
+getCardNumber():string

+payTicket(price: Float):bool
+reversePayment(price: Float): bool
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1464</x><y>280</y><w>24</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>1576</x><y>480</y><w>24</w><h>80</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>152</x><y>104</y><w>336</w><h>968</h></coordinates><panel_attributes>*Admin*
--
_-trains: Train[*]_
_-stations: Station[*]_
_-trips: Trip[*]_
_-employees: Employee[*]_
_-onlinePassengers: OnlinePassenger[*]_
--
-Admin(SSN: string, username: string,
                password: string)

_+getStation(): Station[]_
_+getTrip(): Trip[]_
+getEmployee(): Employee[]
+getTrain(): Train[]

_+getTrain(id: int): Train_
_+getStation(id: int): Station_
_+getTrip(id: int): Trip_
_-getAdmin(username: string): Admin_
_-getEmployee(id: int): Employee_
_-getOnlinePassenger(SSN: int): OnlinePassenger_

{innerclass
-ConstructableEmployee
--
--
+ConstructableEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string)
innerclass}

{innerclass
-ConstructableTrip
--
--
ConstructableTrip(
  price: int, date: DateTime,
  from: Station, to: Station,
  train: Train,
  bookedSeats: int)
innerclass}

{innerclass
-ConstructableStation
--
--
ConstructableStation(
  name: string,
  location: string)
innerclass}

{innerclass
-ConstructableTrain
--
--
+ConstructableTrain(seats: int)
innerclass}

+createTrain(seats: int): Train

+createStation(name: string,
                            location: string): Station

+createTrip(price: int, date: DateTime,
                      from: Station, to: Station,
                      train: Train,
                      bookedSeats: int): Trip

+createEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string):
Employee

+createAdmin(SSN: int, username: string, password: string,
                          admin: Admin = null): Admin

+ticketsDateReport(date: DateTime): void
+ticketsFromReport(station: Station): void
+ticketsToReport(station: Station): void
+ticketsEmployeeReport(employee: Employee): void

_+addOnlinePassenger(passenger: OnlinePassenger): bool_

_+loginPassenger(username: string, password: string): OnlinePassenger_
_+loginEmployee(username: string, password: string): Employee_
_+loginAdmin(username: string, password: string): Admin_

 _public static Admin? getAdmin(string username)_
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>648</x><y>0</y><w>216</w><h>216</h></coordinates><panel_attributes>*/User/*
--
-ID: int
-username: string
-auth: bool
-password: string
--
+User(SSN: string, username: string,
            auth: bool, password: string)

+getSSN(): int
+getUsername(): string
+getAuth(): bool
+login(password: string): bool

+setUsername(newUsername: string): void
+setAuth(newAuth: bool): void
+setPassword(newPassword): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>480</x><y>104</y><w>184</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>210;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1040</x><y>664</y><w>80</w><h>144</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;160;10;10;80;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>960</x><y>232</y><w>200</w><h>152</h></coordinates><panel_attributes>*Employee*
--
-salary: int
-tickets: OfflineTicket[0..*]
--
#Employee(salary: int, SSN: string,
                    username: string, auth: bool
                    password: string)

+getSalary(): int
+setSalary(newSalary): void

+getOfflineTicket(ID: int): OnlineTicket</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1080</x><y>176</y><w>24</w><h>72</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1048</x><y>40</y><w>216</w><h>144</h></coordinates><panel_attributes>/*TicketsOwner*/
--
--

+getTicket(ID: int = null, to: string = null, 
                    from: string = null,
                    fromDate: DateTime = null,
                    toDate: DateTime = null): Tickets[]


+bookTicket(trip: Trip): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1104</x><y>576</y><w>192</w><h>168</h></coordinates><panel_attributes>*/Ticket/*
--
-ID: string
-trip: Trip
-bookingDate: DateTime
--
+Ticket( ID: string, trip: Trip)

+virtual bookTicket(): bool
/+getOwner(): User/

+getID(): int
+getTrip(): Trip
+getBookingDate(): DateTime

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1288</x><y>480</y><w>184</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;130;210;130;210;10</additional_attributes></element><element><id>Relation</id><coordinates><x>448</x><y>520</y><w>168</w><h>56</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;60;10;60;50;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>448</x><y>624</y><w>152</w><h>192</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>170;220;90;220;90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>448</x><y>456</y><w>544</w><h>352</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>660;420;660;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>448</x><y>240</y><w>528</w><h>152</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>640;10;150;10;150;170;10;170</additional_attributes></element><element><id>Relation</id><coordinates><x>1120</x><y>376</y><w>24</w><h>104</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLNote</id><coordinates><x>24</x><y>336</y><w>112</w><h>112</h></coordinates><panel_attributes>inner classes to make
trip, train, station,
and employee
creatable only when
admin is logged in:

https://stackoverflow.com/questions/2016719/how-to-create-a-constructor-that-is-only-usable-by-a-specific-class-c-friend</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1448</x><y>56</y><w>224</w><h>232</h></coordinates><panel_attributes>*OnlinePassenger*
--
-tickets: OnlineTicket[0..*]
--
#OnlinePassenger(SSN: string,
                                  username: string,
                                  auth: bool
                                  password: string)

_+signup(int SSN, string username,_
_                string password): OnlinePassenger_

+bookTicket(cardNumber: string,
                                   secutrityDigits: string, 
                                   trip: Trip): bool

+cancelTicket(ticketID: int): bool

+getOnlineTicket(ID: int): OnlineTicket</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>856</x><y>0</y><w>320</w><h>56</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;380;10;380;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1032</x><y>464</y><w>192</w><h>80</h></coordinates><panel_attributes>*OfflineTicket*
--
-owner: Employee
--
+OfflineTicket(owner: Employee,
                          ID: string, trip: Trip)



</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1120</x><y>536</y><w>24</w><h>56</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;50;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>784</x><y>640</y><w>176</w><h>168</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;200;10;200;190</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1176</x><y>264</y><w>112</w><h>56</h></coordinates><panel_attributes>add ticket to array
after booking</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1152</x><y>296</y><w>40</w><h>24</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;30;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1200</x><y>312</y><w>24</w><h>168</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;190</additional_attributes></element><element><id>Relation</id><coordinates><x>1256</x><y>312</y><w>208</w><h>96</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;100;240;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1248</x><y>216</y><w>216</w><h>64</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>250;10;10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>128</x><y>368</y><w>72</w><h>24</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;70;10</additional_attributes></element><element><id>Relation</id><coordinates><x>120</x><y>872</y><w>48</w><h>24</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;40;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>840</y><w>128</w><h>72</h></coordinates><panel_attributes>if admins list is empty:
	- add admin
else:
	- make sure the old
   admin is authenticated</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1256</x><y>104</y><w>208</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;240;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1072</x><y>840</y><w>88</w><h>24</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1144</x><y>824</y><w>112</w><h>56</h></coordinates><panel_attributes>add ticket to array
after booking</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1176</x><y>736</y><w>24</w><h>104</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element></diagram>