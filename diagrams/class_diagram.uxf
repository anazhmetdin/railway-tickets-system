<diagram program="umletino" version="15.0.0"><zoom_level>13</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>884</x><y>845</y><w>312</w><h>221</h></coordinates><panel_attributes>*Station*
--
-name: string
-location: string
--
#Station(name: string, location: string)

+getName(): string
+getLocation(): string

+setName(name: string): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>858</x><y>1287</y><w>312</w><h>130</h></coordinates><panel_attributes>*Train*
--
-seatsCount: int
--
#Train(seats: int)

+getSeatsCount(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1352</x><y>1287</y><w>312</w><h>286</h></coordinates><panel_attributes>*Trip*
--
-price: float
-date: DateTime
-from: Station
-to: Station
-train: Train
-tickets: Ticket[*]
--
#Trip(price: int, date: DateTime,
          from: Station, to: Station,
          train: Train, bookedSeats: int)

+getters
+hasEmptySeat(): boolean
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1157</x><y>1287</y><w>221</w><h>39</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;110;10;150;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2262</x><y>559</y><w>312</w><h>221</h></coordinates><panel_attributes>*OnlineTicket*
--
-payment: Payment
-owner: OnlinePassenger
--
+OnlineTicket(payment: Payment,
                          owner: OnlinePassenger,
                          ID: string, trip: Trip)

+cancelTicket(): bool
+getPayment(): Payment


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2405</x><y>884</y><w>377</w><h>182</h></coordinates><panel_attributes>*Payment*
--
-ID: int
-cardNumber: int
--
+getID(): int
+getCardNumber():int

+payTicket(price: Float):void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2288</x><y>416</y><w>39</w><h>169</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>2470</x><y>767</y><w>39</w><h>143</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>273</x><y>169</y><w>403</w><h>1482</h></coordinates><panel_attributes>*Admin*
--
_-trains: Train[*]_
_-stations: Station[*]_
_-trips: Trip[*]_
_-employees: Employee[*]_
--
+Admin(SSN: string, username: string,
               auth: bool, password: string)

_+getTrain(): Train[]_
_+getStation(): Station[]_
_+getTrip(): Trip[]_
_+getEmployee(): Employee[]_

_+getTrain(id: int): Train_
_+getStation(id: int): Station_
_+getTrip(id: int): Trip_
_+getEmployee(id: int): Employee_

{innerclass
-ConstructableEmployee
--
--
+ConstructableEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string)
innerclass}

{innerclass
-ConstructableTrip
--
--
ConstructableTrip(
  price: int, date: DateTime,
  from: Station, to: Station,
  train: Train,
  bookedSeats: int)
innerclass}

{innerclass
-ConstructableStation
--
--
ConstructableStation(
  name: string,
  location: string)
innerclass}

{innerclass
-ConstructableTrain
--
--
+ConstructableTrain(seats: int)
innerclass}

+createTrain(seats: int): Train

+createStation(name: string,
                            location: string): Station

+createTrip(price: int, date: DateTime,
                      from: Station, to: Station,
                      train: Train,
                      bookedSeats: int): Trip

+createEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string):
Employee

+ticketsDateReport(date: DateTime): void
+ticketsFromReport(station: Station): void
+ticketsToReport(station: Station): void
+ticketsEmployeeReport(employee: Employee): void

+RemoveTrain(train: Train): bool
+RemoveStation(station: Station): bool
+RemoveTrip(trip: Trip): bool
+RemoveEmployee(train: Employee): bool

+setSeatCountTrain(train: Train, 
                                     seatCount: int): void

+changeTripTrain(trip: Trip, train: Train)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>962</x><y>0</y><w>351</w><h>351</h></coordinates><panel_attributes>*/User/*
--
-ID: int
-username: string
-auth: bool
-password: string
--
+User(SSN: string, username: string,
            auth: bool, password: string)

+getSSN(): int
+getUsername(): string
+getAuth(): bool
+login(password: string): bool

+setUsername(newUsername: string): void
+setAuth(newAuth: bool): void
+setPassword(newPassword): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>663</x><y>169</y><w>325</w><h>39</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>230;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1599</x><y>1144</y><w>130</w><h>169</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;110;10;10;80;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1469</x><y>390</y><w>325</w><h>208</h></coordinates><panel_attributes>*Employee*
--
-salary: int
-tickets: OfflineTicket[0..*]
--
#Employee(salary: int, SSN: string,
                    username: string, auth: bool
                    password: string)

+getSalary(): int
+setSalary(newSalary): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1300</x><y>221</y><w>234</w><h>195</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;160;10;160;130</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1612</x><y>91</y><w>260</w><h>130</h></coordinates><panel_attributes>&lt;&lt;Interfae&gt;&gt;
*TicketsUser*
--
+getTicket():Ticket[]
+getTicket(id: int):Ticket
+addTicket(ticket: Ticket): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1703</x><y>1001</y><w>312</w><h>208</h></coordinates><panel_attributes>*/Ticket/*
--
-ID: string
-trip: Trip
-bookingDate: DateTime
--
+Ticket(employee: Employee,
              ID: string, trip: Trip)

+bookTicket(): bool
+getOwner(): User



</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2002</x><y>767</y><w>299</w><h>273</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;190;210;190;210;10</additional_attributes></element><element><id>Relation</id><coordinates><x>637</x><y>845</y><w>273</w><h>39</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>637</x><y>962</y><w>247</w><h>364</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>170;260;90;260;90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>637</x><y>676</y><w>884</w><h>637</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>660;470;660;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>637</x><y>390</y><w>858</w><h>182</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>640;10;150;10;150;120;10;120</additional_attributes></element><element><id>Relation</id><coordinates><x>1729</x><y>585</y><w>39</w><h>195</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;10;130</additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>143</y><w>182</w><h>182</h></coordinates><panel_attributes>inner classes to make
trip, train, station,
and employee
creatable only when
admin is logged in:

https://stackoverflow.com/questions/2016719/how-to-create-a-constructor-that-is-only-usable-by-a-specific-class-c-friend</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>169</x><y>169</y><w>130</w><h>39</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>80;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2262</x><y>247</y><w>325</w><h>182</h></coordinates><panel_attributes>*OnlinePassenger*
--
-tickets: OnlineTicket[0..*]
--
-OnlinePassenger(SSN: string,
                                  username: string,
                                  auth: bool
                                  password: string)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1300</x><y>0</y><w>1170</w><h>273</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;880;20;880;190</additional_attributes></element><element><id>Relation</id><coordinates><x>1651</x><y>208</y><w>39</w><h>208</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>1794</x><y>208</y><w>494</w><h>78</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;10;40;360;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1586</x><y>754</y><w>312</w><h>130</h></coordinates><panel_attributes>*OfflineTicket*
--
-owner: Employee
--
+OfflineTicket(owner: Employee,
                          ID: string, trip: Trip)



</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1729</x><y>871</y><w>39</w><h>156</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;100;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1183</x><y>1040</y><w>286</w><h>273</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;200;10;200;190</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1820</x><y>1300</y><w>182</w><h>91</h></coordinates><panel_attributes>add ticket to array</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1651</x><y>1352</y><w>195</w><h>39</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;130;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1885</x><y>1196</y><w>39</w><h>130</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1820</x><y>429</y><w>182</w><h>91</h></coordinates><panel_attributes>add ticket to array</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1781</x><y>481</y><w>65</w><h>39</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;30;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1859</x><y>507</y><w>39</w><h>273</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;190</additional_attributes></element><element><id>Relation</id><coordinates><x>1950</x><y>507</y><w>338</w><h>156</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;100;240;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1937</x><y>351</y><w>351</w><h>104</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>250;10;10;10;10;60</additional_attributes></element></diagram>