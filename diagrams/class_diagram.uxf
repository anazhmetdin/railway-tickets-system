<diagram program="umletino" version="15.0.0"><zoom_level>13</zoom_level><help_text>Space for diagram notesb </help_text><element><id>UMLClass</id><coordinates><x>975</x><y>845</y><w>312</w><h>182</h></coordinates><panel_attributes>*Station*
--
#name: string
-#ocation: string
--
#Station(name: string, location: string)

+getName(): string
+getLocation(): string</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>949</x><y>1287</y><w>312</w><h>182</h></coordinates><panel_attributes>*Train*
--
-ID: int
-seatsCount: int
--
#Train(seats: int)

+getID(): int
+getSeatsCount(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1443</x><y>1287</y><w>312</w><h>598</h></coordinates><panel_attributes>*Trip*
--
-ID: int
#price: double
#date: DateTime
#from: Station
#to: Station
#train: Train
#tickets: Ticket[*]
--
#Trip(ID: int, price: int, date: DateTime,
           from: Station, to: Station,
           train: Train, bookedSeats: int)

+hasEmptySeat(): boolean

+getID(): int
+getPrice(): float
+getDate(): DateTime
+getFrom(): Station
+getTo(): Station
+getTrain(): Train

_+getTrips(to: string = null, _
_                  from: string = null,_
_                  fromDate: DateTime = null ,_
_                  toDate: DateTime = null): Trip[]_

+getTicket():Ticket[]
+getTicket(id: int):Ticket
+addTicket(ticket: Ticket): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1248</x><y>1287</y><w>221</w><h>39</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;110;10;150;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2353</x><y>585</y><w>390</w><h>208</h></coordinates><panel_attributes>*OnlineTicket*
--
-payment: Payment
-owner: OnlinePassenger
--
+OnlineTicket(payment: Payment,
                          owner: OnlinePassenger,
                          ID: long, trip: Trip)

+cancelTicket(passenger: OnlinePassenger): bool


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2496</x><y>884</y><w>377</w><h>273</h></coordinates><panel_attributes>*Payment*
--
-ID: long
-cardNumber: string
-paymentAmount: double
-paid: bool
--
+Payment(ID: int, cardNumber: string)

+getID(): long
+getPaid(): bool

+payTicket(price: double, threeDigits: string):bool
+reversePayment(): bool
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2379</x><y>429</y><w>39</w><h>182</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;120</additional_attributes></element><element><id>Relation</id><coordinates><x>2561</x><y>780</y><w>39</w><h>130</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>247</x><y>169</y><w>546</w><h>1573</h></coordinates><panel_attributes>*Admin*
--
_-trains: Train[*]_
_-stations: Station[*]_
_-trips: Trip[*]_
_-employees: Employee[*]_
_-onlinePassengers: OnlinePassenger[*]_
--
-Admin(SSN: string, username: string,
                password: string)

_+getStation(): Station[]_
_+getTrip(): Trip[]_
+getEmployee(): Employee[]
+getTrain(): Train[]

_+getTrain(id: int): Train_
_+getStation(id: int): Station_
_+getTrip(id: int): Trip_
_-getAdmin(username: string): Admin_
_-getEmployee(id: int): Employee_
_-getOnlinePassenger(SSN: int): OnlinePassenger_

{innerclass
-ConstructableEmployee
--
--
+ConstructableEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string)
innerclass}

{innerclass
-ConstructableTrip
--
--
ConstructableTrip(
  price: int, date: DateTime,
  from: Station, to: Station,
  train: Train,
  bookedSeats: int)
innerclass}

{innerclass
-ConstructableStation
--
--
ConstructableStation(
  name: string,
  location: string)
innerclass}

{innerclass
-ConstructableTrain
--
--
+ConstructableTrain(seats: int)
innerclass}

+createTrain(seats: int): Train

+createStation(name: string,
                            location: string): Station

+createTrip(price: int, date: DateTime,
                      from: Station, to: Station,
                      train: Train,
                      bookedSeats: int): Trip

+createEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string):
Employee

+createAdmin(SSN: int, username: string, password: string,
                          admin: Admin = null): Admin

+ticketsDateReport(date: DateTime): void
+ticketsFromReport(station: Station): void
+ticketsToReport(station: Station): void
+ticketsEmployeeReport(employee: Employee): void

_+addOnlinePassenger(passenger: OnlinePassenger): bool_

_+loginPassenger(username: string, password: string): OnlinePassenger_
_+loginEmployee(username: string, password: string): Employee_
_+loginAdmin(username: string, password: string): Admin_

_- static Admin? getAdmin(string username)_
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1053</x><y>0</y><w>351</w><h>351</h></coordinates><panel_attributes>*/User/*
--
-ID: int
-username: string
-auth: bool
-password: string
--
+User(SSN: string, username: string,
            auth: bool, password: string)

+getSSN(): int
+getUsername(): string
+getAuth(): bool
+login(password: string): bool

+setUsername(newUsername: string): void
+setAuth(newAuth: bool): void
+setPassword(newPassword): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>780</x><y>169</y><w>299</w><h>39</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>210;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1690</x><y>1079</y><w>130</w><h>234</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;160;10;10;80;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1560</x><y>325</y><w>325</w><h>299</h></coordinates><panel_attributes>*Employee*
--
-salary: double
-tickets: OfflineTicket[0..*]
--
#Employee(salary: int, SSN: string,
                    username: string,
                    password: string)

+getSalary(): double
#setSalary(newSalary: double): void

+bookTicket(cardNumber: string): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1755</x><y>247</y><w>39</w><h>104</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1703</x><y>65</y><w>351</w><h>195</h></coordinates><panel_attributes>/*TicketOwner*/
--
--

+getTicket(ID: int = null, to: string = null, 
                    from: string = null,
                    fromDate: DateTime = null,
                    toDate: DateTime = null): Ticket[]

+getTicket(): Ticket[]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1794</x><y>962</y><w>312</w><h>247</h></coordinates><panel_attributes>*/Ticket/*
--
-ID: long
-trip: Trip
-bookingDate: DateTime
--
+Ticket( ID: string, trip: Trip)

+getID(): int
+getTrip(): Trip
+getBookingDate(): DateTime

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2093</x><y>780</y><w>299</w><h>221</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;150;210;150;210;10</additional_attributes></element><element><id>Relation</id><coordinates><x>728</x><y>845</y><w>273</w><h>91</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;60;10;60;50;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>728</x><y>1014</y><w>247</w><h>312</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>170;220;90;220;90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>728</x><y>741</y><w>884</w><h>572</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>660;420;660;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>728</x><y>390</y><w>858</w><h>247</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>640;10;150;10;150;170;10;170</additional_attributes></element><element><id>Relation</id><coordinates><x>1820</x><y>611</y><w>39</w><h>169</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLNote</id><coordinates><x>39</x><y>546</y><w>182</w><h>182</h></coordinates><panel_attributes>inner classes to make
trip, train, station,
and employee
creatable only when
admin is logged in:

https://stackoverflow.com/questions/2016719/how-to-create-a-constructor-that-is-only-usable-by-a-specific-class-c-friend</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2353</x><y>117</y><w>364</w><h>325</h></coordinates><panel_attributes>*OnlinePassenger*
--
-tickets: OnlineTicket[0..*]
--
#OnlinePassenger(SSN: string,
                                   username: string,
                                   password: string)

_+signup(int SSN, string username,_
_                string password): OnlinePassenger_

+bookTicket(cardNumber: string,
                       secutrityDigits: string, 
                       trip: Trip): bool

+cancelTicket(ticketID: int): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1391</x><y>0</y><w>520</w><h>91</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;380;10;380;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1677</x><y>754</y><w>312</w><h>117</h></coordinates><panel_attributes>*OfflineTicket*
--
-owner: Employee
--
+OfflineTicket(owner: Employee,
                          ID: string, trip: Trip)



</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1820</x><y>858</y><w>39</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1274</x><y>1001</y><w>286</w><h>312</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;200;10;200;220</additional_attributes></element><element><id>Relation</id><coordinates><x>208</x><y>598</y><w>117</w><h>39</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;70;10</additional_attributes></element><element><id>Relation</id><coordinates><x>195</x><y>1417</y><w>78</w><h>39</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;40;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>1365</y><w>208</w><h>117</h></coordinates><panel_attributes>if admins list is empty:
	- add admin
else:
	- make sure the old
   admin is authenticated</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2041</x><y>169</y><w>338</w><h>39</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;240;10</additional_attributes></element></diagram>