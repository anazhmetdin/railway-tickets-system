<diagram program="umletino" version="15.0.0"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>750</x><y>720</y><w>240</w><h>170</h></coordinates><panel_attributes>*Station*
--
-name: string
-location: string
--
#Station(name: string, location: string)

+getName(): string
+getLocation(): string

+setName(name: string): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>1060</y><w>240</w><h>140</h></coordinates><panel_attributes>*Train*
--
-ID: int
-seatsCount: int
--
#Train(seats: int)

+getID(): int
+getSeatsCount(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1110</x><y>1060</y><w>240</w><h>400</h></coordinates><panel_attributes>*Trip*
--
-ID: int
-price: float
-date: DateTime
-from: Station
-to: Station
-train: Train
-tickets: Ticket[*]
--
#Trip(ID: int, price: int, date: DateTime,
           from: Station, to: Station,
           train: Train, bookedSeats: int)

+hasEmptySeat(): boolean

+getID(): int
+getPrice(): float
+getDate(): DateTime
+getFrom(): Station
+getTo(): Station
+getTrain(): Train

_+getTrips(to: Station = null, _
_                  from: Station = null,_
_                  fromDate: DateTime = null ,_
_                  toDate: DateTime = null): Trip[]_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>960</x><y>1060</y><w>170</w><h>30</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;110;10;150;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1810</x><y>500</y><w>240</w><h>180</h></coordinates><panel_attributes>*OnlineTicket*
--
-payment: Payment
-owner: OnlinePassenger
--
+OnlineTicket(payment: Payment,
                          owner: OnlinePassenger,
                          ID: string, trip: Trip)

+bookTicket(): bool
+cancelTicket(): bool
+getPayment(): Payment


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1920</x><y>750</y><w>290</w><h>180</h></coordinates><panel_attributes>*Payment*
--
-ID: int
-cardNumber: int
--
+Payment(ID: int, cardNumber: int)

+getID(): int
+getCardNumber():int

+payTicket(price: Float):bool
+reversePayment(price: Float): bool
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1830</x><y>400</y><w>30</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1970</x><y>670</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>200</y><w>420</w><h>1170</h></coordinates><panel_attributes>*Admin*
--
_-trains: Train[*]_
_-stations: Station[*]_
_-trips: Trip[*]_
_-employees: Employee[*]_
_-onlinePassengers: OnlinePassenger[*]_
--
-Admin(SSN: string, username: string,
                password: string)

+getTrain(): Train[]
_+getStation(): Station[]_
_+getTrip(): Trip[]_
+getEmployee(): Employee[]
+getOnlinePassenger(): OnlinePassenger[]

+getTrain(id: int): Train
_+getStation(id: int): Station_
_+getTrip(id: int): Trip_
+getEmployee(id: int): Employee
_+getOnlinePassenger(SSN: int): OnlinePassenger_

{innerclass
-ConstructableEmployee
--
--
+ConstructableEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string)
innerclass}

{innerclass
-ConstructableTrip
--
--
ConstructableTrip(
  price: int, date: DateTime,
  from: Station, to: Station,
  train: Train,
  bookedSeats: int)
innerclass}

{innerclass
-ConstructableStation
--
--
ConstructableStation(
  name: string,
  location: string)
innerclass}

{innerclass
-ConstructableTrain
--
--
+ConstructableTrain(seats: int)
innerclass}

+createTrain(seats: int): Train

+createStation(name: string,
                            location: string): Station

+createTrip(price: int, date: DateTime,
                      from: Station, to: Station,
                      train: Train,
                      bookedSeats: int): Trip

+createEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string):
Employee

+createAdmin(SSN: int, username: string, password: string,
                          admin: Admin = null): Admin

+ticketsDateReport(date: DateTime): void
+ticketsFromReport(station: Station): void
+ticketsToReport(station: Station): void
+ticketsEmployeeReport(employee: Employee): void

_+addOnlinePassenger(passenger: OnlinePassenger): bool_

_+loginPassenger(username: string, password: string): OnlinePassenger_
_+loginEmployee(username: string, password: string): Employee_
_+loginAdmin(username: string, password: string): Admin_

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>810</x><y>70</y><w>270</w><h>270</h></coordinates><panel_attributes>*/User/*
--
-ID: int
-username: string
-auth: bool
-password: string
--
+User(SSN: string, username: string,
            auth: bool, password: string)

+getSSN(): int
+getUsername(): string
+getAuth(): bool
+login(password: string): bool

+setUsername(newUsername: string): void
+setAuth(newAuth: bool): void
+setPassword(newPassword): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>200</y><w>230</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>210;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1300</x><y>900</y><w>100</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;160;10;10;80;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1200</x><y>370</y><w>250</w><h>160</h></coordinates><panel_attributes>*Employee*
--
-salary: int
-tickets: OfflineTicket[0..*]
--
#Employee(salary: int, SSN: string,
                    username: string, auth: bool
                    password: string)

+getSalary(): int
+setSalary(newSalary): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>240</y><w>180</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;160;10;160;130</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1310</x><y>140</y><w>200</w><h>100</h></coordinates><panel_attributes>&lt;&lt;Interfae&gt;&gt;
*TicketsOwner*
--
+getTicket():Ticket[]
+getTicket(id: int):Ticket
+addTicket(ticket: Ticket): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1380</x><y>790</y><w>240</w><h>210</h></coordinates><panel_attributes>*/Ticket/*
--
-ID: string
-trip: Trip
-bookingDate: DateTime
--
+Ticket( ID: string, trip: Trip)

+virtual bookTicket(): bool
/+getOwner(): User/

+getID(): int
+getTrip(): Trip
+getBookingDate(): DateTime

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1610</x><y>670</y><w>230</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;130;210;130;210;10</additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>720</y><w>210</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;60;10;60;50;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>850</y><w>190</w><h>240</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>170;220;90;220;90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>640</y><w>680</w><h>440</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>660;420;660;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>370</y><w>660</w><h>190</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>640;10;150;10;150;170;10;170</additional_attributes></element><element><id>Relation</id><coordinates><x>1400</x><y>520</y><w>30</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;10;130</additional_attributes></element><element><id>UMLNote</id><coordinates><x>30</x><y>490</y><w>140</w><h>140</h></coordinates><panel_attributes>inner classes to make
trip, train, station,
and employee
creatable only when
admin is logged in:

https://stackoverflow.com/questions/2016719/how-to-create-a-constructor-that-is-only-usable-by-a-specific-class-c-friend</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1810</x><y>180</y><w>280</w><h>230</h></coordinates><panel_attributes>*OnlinePassenger*
--
-tickets: OnlineTicket[0..*]
--
+OnlinePassenger(SSN: string,
                                  username: string,
                                  auth: bool
                                  password: string)

+cancelTicket(ticketID: int): bool

_+getTicket(ID: int = null, to: Station = null, _
_                    from: Station = null,_
_                    fromDate: DateTime = null,_
_                    toDate: DateTime = null): Tickets[]_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>70</y><w>900</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;880;20;880;110</additional_attributes></element><element><id>Relation</id><coordinates><x>1340</x><y>230</y><w>30</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>1450</x><y>230</y><w>380</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;40;360;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1290</x><y>650</y><w>240</w><h>100</h></coordinates><panel_attributes>*OfflineTicket*
--
-owner: Employee
--
+OfflineTicket(owner: Employee,
                          ID: string, trip: Trip)



</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1400</x><y>740</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;50;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>980</x><y>870</y><w>220</w><h>210</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;200;10;200;190</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1470</x><y>1070</y><w>140</w><h>70</h></coordinates><panel_attributes>add ticket to array</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1340</x><y>1110</y><w>150</w><h>30</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;130;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1520</x><y>990</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1470</x><y>400</y><w>140</w><h>70</h></coordinates><panel_attributes>add ticket to array</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1440</x><y>440</y><w>50</w><h>30</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;30;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1500</x><y>460</y><w>30</w><h>210</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;190</additional_attributes></element><element><id>Relation</id><coordinates><x>1570</x><y>460</y><w>260</w><h>120</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;100;240;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1560</x><y>340</y><w>270</w><h>80</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>250;10;10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>1340</x><y>140</y><w>990</w><h>1140</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>170;10;960;10;970;1120;10;1110</additional_attributes></element><element><id>Relation</id><coordinates><x>160</x><y>530</y><w>90</w><h>30</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;70;10</additional_attributes></element><element><id>Relation</id><coordinates><x>150</x><y>1160</y><w>60</w><h>30</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;40;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>1120</y><w>160</w><h>90</h></coordinates><panel_attributes>if admins list is empty:
	- add admin
else:
	- make sure the old
   admin is authenticated</panel_attributes><additional_attributes></additional_attributes></element></diagram>