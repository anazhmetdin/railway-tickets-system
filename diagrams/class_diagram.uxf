<diagram program="umletino" version="15.0.0"><zoom_level>12</zoom_level><help_text>Space for diagram notesb</help_text><element><id>UMLClass</id><coordinates><x>900</x><y>780</y><w>288</w><h>204</h></coordinates><panel_attributes>*Station*
--
-name: string
-location: string
--
#Station(name: string, location: string)

+getName(): string
+getLocation(): string

+setName(name: string): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>876</x><y>1188</y><w>288</w><h>168</h></coordinates><panel_attributes>*Train*
--
-ID: int
-seatsCount: int
--
#Train(seats: int)

+getID(): int
+getSeatsCount(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1332</x><y>1188</y><w>288</w><h>552</h></coordinates><panel_attributes>*Trip*
--
-ID: int
-price: float
-date: DateTime
-from: Station
-to: Station
-train: Train
-tickets: Ticket[*]
--
#Trip(ID: int, price: int, date: DateTime,
           from: Station, to: Station,
           train: Train, bookedSeats: int)

+hasEmptySeat(): boolean

+getID(): int
+getPrice(): float
+getDate(): DateTime
+getFrom(): Station
+getTo(): Station
+getTrain(): Train

_+getTrips(to: string = null, _
_                  from: string = null,_
_                  fromDate: DateTime = null ,_
_                  toDate: DateTime = null): Trip[]_

+getTicket():Ticket[]
+getTicket(id: int):Ticket
+addTicket(ticket: Ticket): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1152</x><y>1188</y><w>204</w><h>36</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;110;10;150;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2172</x><y>516</y><w>288</w><h>216</h></coordinates><panel_attributes>*OnlineTicket*
--
-payment: Payment
-owner: OnlinePassenger
--
+OnlineTicket(payment: Payment,
                          owner: OnlinePassenger,
                          ID: string, trip: Trip)

+bookTicket(): bool
+cancelTicket(): bool
+getPayment(): Payment


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2304</x><y>816</y><w>348</w><h>216</h></coordinates><panel_attributes>*Payment*
--
-ID: int
-cardNumber: string
--
+Payment(ID: int, cardNumber: string)

+getID(): int
+getCardNumber():string

+payTicket(price: Float):bool
+reversePayment(price: Float): bool
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2196</x><y>420</y><w>36</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>2364</x><y>720</y><w>36</w><h>120</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>228</x><y>156</y><w>504</w><h>1452</h></coordinates><panel_attributes>*Admin*
--
_-trains: Train[*]_
_-stations: Station[*]_
_-trips: Trip[*]_
_-employees: Employee[*]_
_-onlinePassengers: OnlinePassenger[*]_
--
-Admin(SSN: string, username: string,
                password: string)

_+getStation(): Station[]_
_+getTrip(): Trip[]_
+getEmployee(): Employee[]
+getTrain(): Train[]

_+getTrain(id: int): Train_
_+getStation(id: int): Station_
_+getTrip(id: int): Trip_
_-getAdmin(username: string): Admin_
_-getEmployee(id: int): Employee_
_-getOnlinePassenger(SSN: int): OnlinePassenger_

{innerclass
-ConstructableEmployee
--
--
+ConstructableEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string)
innerclass}

{innerclass
-ConstructableTrip
--
--
ConstructableTrip(
  price: int, date: DateTime,
  from: Station, to: Station,
  train: Train,
  bookedSeats: int)
innerclass}

{innerclass
-ConstructableStation
--
--
ConstructableStation(
  name: string,
  location: string)
innerclass}

{innerclass
-ConstructableTrain
--
--
+ConstructableTrain(seats: int)
innerclass}

+createTrain(seats: int): Train

+createStation(name: string,
                            location: string): Station

+createTrip(price: int, date: DateTime,
                      from: Station, to: Station,
                      train: Train,
                      bookedSeats: int): Trip

+createEmployee(
   salary: int, SSN: string,
   username: string, auth: bool
   password: string):
Employee

+createAdmin(SSN: int, username: string, password: string,
                          admin: Admin = null): Admin

+ticketsDateReport(date: DateTime): void
+ticketsFromReport(station: Station): void
+ticketsToReport(station: Station): void
+ticketsEmployeeReport(employee: Employee): void

_+addOnlinePassenger(passenger: OnlinePassenger): bool_

_+loginPassenger(username: string, password: string): OnlinePassenger_
_+loginEmployee(username: string, password: string): Employee_
_+loginAdmin(username: string, password: string): Admin_

_- static Admin? getAdmin(string username)_
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>972</x><y>0</y><w>324</w><h>324</h></coordinates><panel_attributes>*/User/*
--
-ID: int
-username: string
-auth: bool
-password: string
--
+User(SSN: string, username: string,
            auth: bool, password: string)

+getSSN(): int
+getUsername(): string
+getAuth(): bool
+login(password: string): bool

+setUsername(newUsername: string): void
+setAuth(newAuth: bool): void
+setPassword(newPassword): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>156</y><w>276</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>210;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1560</x><y>996</y><w>120</w><h>216</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;160;10;10;80;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1440</x><y>348</y><w>300</w><h>228</h></coordinates><panel_attributes>*Employee*
--
-salary: int
-tickets: OfflineTicket[0..*]
--
#Employee(salary: int, SSN: string,
                    username: string, auth: bool
                    password: string)

+getSalary(): int
+setSalary(newSalary): void

+getOfflineTicket(ID: int): OnlineTicket</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1620</x><y>264</y><w>36</w><h>108</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1572</x><y>60</y><w>324</w><h>216</h></coordinates><panel_attributes>/*TicketsOwner*/
--
--

+getTicket(ID: int = null, to: string = null, 
                    from: string = null,
                    fromDate: DateTime = null,
                    toDate: DateTime = null): Tickets[]


+bookTicket(trip: Trip): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1656</x><y>864</y><w>288</w><h>252</h></coordinates><panel_attributes>*/Ticket/*
--
-ID: string
-trip: Trip
-bookingDate: DateTime
--
+Ticket( ID: string, trip: Trip)

+virtual bookTicket(): bool
/+getOwner(): User/

+getID(): int
+getTrip(): Trip
+getBookingDate(): DateTime

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1932</x><y>720</y><w>276</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;130;210;130;210;10</additional_attributes></element><element><id>Relation</id><coordinates><x>672</x><y>780</y><w>252</w><h>84</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;60;10;60;50;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>672</x><y>936</y><w>228</w><h>288</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>170;220;90;220;90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>672</x><y>684</y><w>816</w><h>528</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>660;420;660;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>672</x><y>360</y><w>792</w><h>228</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>640;10;150;10;150;170;10;170</additional_attributes></element><element><id>Relation</id><coordinates><x>1680</x><y>564</y><w>36</w><h>156</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLNote</id><coordinates><x>36</x><y>504</y><w>168</w><h>168</h></coordinates><panel_attributes>inner classes to make
trip, train, station,
and employee
creatable only when
admin is logged in:

https://stackoverflow.com/questions/2016719/how-to-create-a-constructor-that-is-only-usable-by-a-specific-class-c-friend</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2172</x><y>84</y><w>336</w><h>348</h></coordinates><panel_attributes>*OnlinePassenger*
--
-tickets: OnlineTicket[0..*]
--
#OnlinePassenger(SSN: string,
                                  username: string,
                                  auth: bool
                                  password: string)

_+signup(int SSN, string username,_
_                string password): OnlinePassenger_

+bookTicket(cardNumber: string,
                                   secutrityDigits: string, 
                                   trip: Trip): bool

+cancelTicket(ticketID: int): bool

+getOnlineTicket(ID: int): OnlineTicket</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1284</x><y>0</y><w>480</w><h>84</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;380;10;380;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1548</x><y>696</y><w>288</w><h>120</h></coordinates><panel_attributes>*OfflineTicket*
--
-owner: Employee
--
+OfflineTicket(owner: Employee,
                          ID: string, trip: Trip)



</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1680</x><y>804</y><w>36</w><h>84</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;50;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1176</x><y>960</y><w>264</w><h>252</h></coordinates><panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes><additional_attributes>10;10;200;10;200;190</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1764</x><y>396</y><w>168</w><h>84</h></coordinates><panel_attributes>add ticket to array
after booking</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1728</x><y>444</y><w>60</w><h>36</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;30;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1800</x><y>468</y><w>36</w><h>252</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;190</additional_attributes></element><element><id>Relation</id><coordinates><x>1884</x><y>468</y><w>312</w><h>144</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;100;240;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1872</x><y>324</y><w>324</w><h>96</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>250;10;10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>192</x><y>552</y><w>108</w><h>36</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;70;10</additional_attributes></element><element><id>Relation</id><coordinates><x>180</x><y>1308</y><w>72</w><h>36</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;40;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>1260</y><w>192</w><h>108</h></coordinates><panel_attributes>if admins list is empty:
	- add admin
else:
	- make sure the old
   admin is authenticated</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1884</x><y>156</y><w>312</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;240;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1608</x><y>1260</y><w>132</w><h>36</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1716</x><y>1236</y><w>168</w><h>84</h></coordinates><panel_attributes>add ticket to array
after booking</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1764</x><y>1104</y><w>36</w><h>156</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element></diagram>